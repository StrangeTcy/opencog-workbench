{"version":3,"file":"all.min.js","sources":["app.module.js","avengers/avengers.module.js","core/core.module.js","dashboard/dashboard.module.js","layout/layout.module.js","widgets/widgets.module.js","blocks/logger/logger.module.js","blocks/router/router.module.js","blocks/exception/exception.module.js","avengers/avengers.js","avengers/config.route.js","core/config.js","core/constants.js","core/dataservice.js","dashboard/config.route.js","dashboard/dashboard.js","layout/shell.js","layout/sidebar.js","widgets/ccSidebar.js","widgets/ccSpinner.js","widgets/ccWidgetClose.js","widgets/ccWidgetHeader.js","widgets/ccWidgetMinimize.js","blocks/logger/logger.js","blocks/router/routehelper.js","blocks/exception/exception-handler.js","blocks/exception/exception.js","templates.js"],"names":[],"mappings":"CAAA,WACA,YAEA,SAAA,OAAA,OAaA,WACA,cAKA,eACA,gBACA,kBCxBA,WACA,YAEA,SAAA,OAAA,sBCHA,WACA,YAEA,SAAA,OAAA,YAIA,YAAA,UAAA,aAIA,mBAAA,gBAAA,gBAIA,cCfA,WACA,YAEA,SAAA,OAAA,uBCHA,WACA,YAEA,SAAA,OAAA,oBCHA,WACA,YAEA,SAAA,OAAA,qBCHA,WACA,YAEA,SAAA,OAAA,uBCHA,WACA,YAEA,SAAA,OAAA,iBACA,UACA,qBCLA,WACA,YAEA,SAAA,OAAA,oBAAA,qBCHA,WACA,YASA,SAAA,GAAA,EAAA,GAQA,QAAA,KAIA,MAAA,KAAA,KAAA,WACA,EAAA,KAAA,6BAIA,QAAA,KACA,MAAA,GAAA,cAAA,KAAA,SAAA,GAEA,MADA,GAAA,SAAA,EACA,EAAA,WAlBA,GAAA,GAAA,IACA,GAAA,YACA,EAAA,MAAA,WAEA,IAbA,QACA,OAAA,gBACA,WAAA,WAAA,yCCLA,WACA,YASA,SAAA,GAAA,GACA,EAAA,gBAAA,KAGA,QAAA,KACA,QAEA,IAAA,YACA,QACA,YAAA,6BACA,WAAA,WACA,aAAA,KACA,MAAA,WACA,UACA,IAAA,EACA,QAAA,0CAtBA,QACA,OAAA,gBACA,IAAA,gCCLA,WACA,YAOA,SAAA,GAAA,GACA,EAAA,QAAA,QAAA,IACA,EAAA,QAAA,cAAA,qBAcA,QAAA,GAAA,EAAA,EAAA,EAAA,GAEA,EAAA,cACA,EAAA,cAAA,GAIA,EAAA,OAAA,eAAA,EACA,EAAA,OAAA,SAAA,cACA,IAAA,IACA,OAAA,cAAA,SAAA,GACA,MAAA,GAAA,UAMA,GAAA,OAAA,cAAA,EAGA,EAAA,OAAA,eAAA,EAAA,eAzCA,GAAA,GAAA,QAAA,OAAA,WAEA,GAAA,OAAA,uBAQA,IAAA,IACA,eAAA,sBACA,SAAA,uBACA,QAAA,QAGA,GAAA,MAAA,SAAA,GAEA,EAAA,OAAA,wGCpBA,WACA,YAEA,SACA,OAAA,YACA,SAAA,SAAA,QACA,SAAA,SAAA,WCPA,WACA,YAOA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAaA,QAAA,KAQA,QAAA,GAAA,GACA,MAAA,GAAA,KAAA,GAAA,KAAA,QARA,MAAA,GAAA,IAAA,YACA,KAAA,GACA,MAAA,SAAA,GACA,EAAA,QAAA,8BAAA,GACA,EAAA,IAAA,OAQA,QAAA,KAMA,QAAA,GAAA,GAEA,MADA,GAAA,EAAA,OACA,EAAA,KAAA,GAPA,GAAA,GAAA,CACA,OAAA,KACA,KAAA,GACA,MAAA,EAAA,QAAA,mCAQA,QAAA,KACA,GAAA,KACA,KAAA,oBAAA,UAAA,0BACA,KAAA,kBAAA,UAAA,SACA,KAAA,cAAA,UAAA,mCACA,KAAA,eAAA,UAAA,4BACA,KAAA,qBAAA,UAAA,mCACA,KAAA,gBAAA,UAAA,2BACA,KAAA,kBAAA,UAAA,iBACA,KAAA,oBAAA,UAAA,cACA,KAAA,eAAA,UAAA,WACA,KAAA,iBAAA,UAAA,SACA,KAAA,cAAA,UAAA,sBAEA,OAAA,GAAA,KAAA,GAGA,QAAA,KASA,QAAA,KACA,GAAA,EACA,EAAA,KAAA,eATA,MAAA,GACA,EAGA,EAAA,EAAA,MAAA,GAAA,KAAA,GASA,QAAA,GAAA,GACA,GAAA,GAAA,GAAA,GAEA,OAAA,GACA,KAAA,WAAA,MAAA,GAAA,IAAA,KACA,MAAA,EAAA,QAAA,4BA1EA,GACA,GADA,GAAA,EAGA,GACA,gBAAA,EACA,gBAAA,EACA,YAAA,EACA,MAAA,EAGA,OAAA,GAhBA,QACA,OAAA,YACA,QAAA,cAAA,gECLA,WACA,YASA,SAAA,GAAA,GACA,EAAA,gBAAA,KAGA,QAAA,KACA,QAEA,IAAA,IACA,QACA,YAAA,+BACA,WAAA,YACA,aAAA,KACA,MAAA,YACA,UACA,IAAA,EACA,QAAA,gDAtBA,QACA,OAAA,iBACA,IAAA,gCCLA,WACA,YAQA,SAAA,GAAA,EAAA,EAAA,GAeA,QAAA,KACA,GAAA,IAAA,IAAA,IAGA,OAAA,GAAA,IAAA,GAAA,KAAA,WACA,EAAA,KAAA,8BAIA,QAAA,KACA,MAAA,GAAA,kBAAA,KAAA,SAAA,GAEA,MADA,GAAA,aAAA,EACA,EAAA,eAIA,QAAA,KACA,MAAA,GAAA,kBAAA,KAAA,SAAA,GAEA,MADA,GAAA,SAAA,EACA,EAAA,WA/BA,GAAA,GAAA,IAEA,GAAA,MACA,MAAA,kBACA,YAAA,2CAEA,EAAA,aAAA,EACA,EAAA,YACA,EAAA,MAAA,YAEA,IAnBA,QACA,OAAA,iBACA,WAAA,YAAA,GAEA,EAAA,SAAA,KAAA,cAAA,aCPA,WACA,YAQA,SAAA,GAAA,EAAA,EAAA,GAWA,QAAA,KACA,EAAA,QAAA,EAAA,SAAA,WAAA,MAKA,IAGA,QAAA,KAEA,EAAA,WACA,EAAA,YAAA,GACA,KAtBA,GAAA,GAAA,IAEA,GAAA,MAAA,EAAA,SACA,EAAA,YAAA,kBACA,EAAA,QAAA,EACA,EAAA,YAAA,EAEA,IAfA,QACA,OAAA,cACA,WAAA,QAAA,GAEA,EAAA,SAAA,WAAA,SAAA,aCPA,WACA,YAQA,SAAA,GAAA,EAAA,GASA,QAAA,KAAA,IAEA,QAAA,KACA,EAAA,UAAA,EAAA,OAAA,SAAA,GACA,MAAA,GAAA,UAAA,EAAA,SAAA,MACA,KAAA,SAAA,EAAA,GACA,MAAA,GAAA,SAAA,IAAA,EAAA,SAAA,MAIA,QAAA,GAAA,GACA,IAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,MACA,MAAA,EAEA,IAAA,GAAA,EAAA,KACA,OAAA,GAAA,QAAA,MAAA,OAAA,EAAA,EAAA,UAAA,EAAA,UAAA,GAtBA,GAAA,GAAA,KACA,EAAA,EAAA,WAEA,GAAA,UAAA,EAEA,IAbA,QACA,OAAA,cACA,WAAA,UAAA,GAEA,EAAA,SAAA,SAAA,kBCPA,WACA,YAOA,SAAA,KAYA,QAAA,GAAA,EAAA,GAMA,QAAA,GAAA,GAYA,QAAA,KACA,EAAA,QAAA,KACA,EAAA,uBAAA,YAAA,GAbA,GAAA,GAAA,OACA,GAAA,iBACA,EAAA,SAAA,GAIA,EAAA,SAAA,KACA,EAAA,YAAA,GACA,EAAA,QAAA,OALA,IACA,EAAA,UAAA,KACA,EAAA,SAAA,IAXA,GAAA,GAAA,EAAA,KAAA,kBACA,EAAA,EAAA,KAAA,sBACA,GAAA,SAAA,WACA,EAAA,MAAA,GAVA,GAAA,IACA,KAAA,EACA,SAAA,IAEA,OAAA,GAfA,QACA,OAAA,eACA,UAAA,YAAA,MCLA,WACA,YASA,SAAA,GAAA,GAWA,QAAA,GAAA,EAAA,EAAA,GACA,EAAA,QAAA,KACA,EAAA,OAAA,EAAA,UAAA,SAAA,GACA,EAAA,SACA,EAAA,QAAA,OAEA,EAAA,QAAA,GAAA,GAAA,QAAA,GACA,EAAA,QAAA,KAAA,EAAA,MACA,GAdA,GAAA,IACA,KAAA,EACA,SAAA,IAEA,OAAA,GAhBA,QACA,OAAA,eACA,UAAA,YAAA,4BCLA,WACA,YAOA,SAAA,KAcA,QAAA,GAAA,EAAA,EAAA,GAKA,QAAA,GAAA,GACA,EAAA,iBACA,EAAA,SAAA,SAAA,SAAA,KAAA,KANA,EAAA,KAAA,OAAA,KACA,EAAA,KAAA,UACA,EAAA,MAAA,GAVA,GAAA,IACA,KAAA,EACA,SAAA,+BACA,SAAA,IAEA,OAAA,GAjBA,QACA,OAAA,eACA,UAAA,gBAAA,MCLA,WACA,YAOA,SAAA,KAOA,GAAA,IAEA,OACA,MAAA,IACA,SAAA,IACA,UAAA,IACA,cAAA,KAEA,YAAA,gCACA,SAAA,IAEA,OAAA,GAvBA,QACA,OAAA,eACA,UAAA,iBAAA,MCLA,WACA,YAOA,SAAA,KAYA,QAAA,GAAA,EAAA,EAAA,GAMA,QAAA,GAAA,GACA,EAAA,gBACA,IAAA,GAAA,EAAA,SAAA,SAAA,KAAA,mBACA,EAAA,EAAA,SAAA,IACA,GAAA,GAAA,aACA,EAAA,YAAA,oBACA,EAAA,SAAA,wBAEA,EAAA,YAAA,sBACA,EAAA,SAAA,qBAEA,EAAA,OAAA,KAfA,EAAA,KAAA,OAAA,KACA,EAAA,KAAA,aACA,EAAA,MAAA,GAXA,GAAA,IACA,KAAA,EACA,SAAA,mCACA,SAAA,IAEA,OAAA,GAfA,QACA,OAAA,eACA,UAAA,mBAAA,MCLA,WACA,YAQA,SAAA,GAAA,EAAA,GAgBA,QAAA,GAAA,EAAA,EAAA,GACA,EAAA,MAAA,EAAA,GACA,EAAA,MAAA,UAAA,EAAA,GAGA,QAAA,GAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,GACA,EAAA,KAAA,SAAA,EAAA,GAGA,QAAA,GAAA,EAAA,EAAA,GACA,EAAA,QAAA,EAAA,GACA,EAAA,KAAA,YAAA,EAAA,GAGA,QAAA,GAAA,EAAA,EAAA,GACA,EAAA,QAAA,EAAA,GACA,EAAA,KAAA,YAAA,EAAA,GAhCA,GAAA,IACA,YAAA,EAEA,MAAA,EACA,KAAA,EACA,QAAA,EACA,QAAA,EAGA,IAAA,EAAA,IAGA,OAAA,GAnBA,QACA,OAAA,iBACA,QAAA,SAAA,GAEA,EAAA,SAAA,OAAA,aCPA,WACA,YAUA,SAAA,KAEA,KAAA,UAOA,KAAA,KAAA,WACA,OACA,OAAA,KAAA,SAKA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAoBA,QAAA,GAAA,GACA,EAAA,QAAA,SAAA,GACA,EAAA,OAAA,QACA,QAAA,OAAA,EAAA,OAAA,YAAA,EAAA,OAAA,eACA,EAAA,KAAA,EAAA,IAAA,EAAA,UAEA,EAAA,WAAA,WAAA,MAGA,QAAA,KAIA,EAAA,IAAA,oBACA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,CAGA,EAAA,SACA,GAAA,CACA,IAAA,GAAA,IAAA,EAAA,OAAA,EAAA,MAAA,EAAA,oBACA,iBACA,EAAA,oBAAA,EAAA,MAAA,EAAA,KAAA,GACA,GAAA,QAAA,GAAA,IACA,EAAA,KAAA,QAKA,QAAA,KACA,IACA,IAGA,QAAA,KACA,IAAA,GAAA,KAAA,GAAA,OACA,GAAA,EAAA,OAAA,eAAA,GAAA,CACA,GAAA,GAAA,EAAA,OAAA,GACA,IAAA,EAAA,KACA,IACA,EAAA,KAAA,GAIA,MAAA,GAGA,QAAA,KACA,EAAA,IAAA,sBACA,SAAA,EAAA,GACA,EAAA,UACA,GAAA,CACA,IAAA,GAAA,EAAA,OAAA,SAAA,KAAA,EAAA,OAAA,GACA,GAAA,MAAA,IAxEA,GAAA,IAAA,EACA,GACA,OAAA,EACA,QAAA,GAEA,KACA,EAAA,EAAA,OAAA,eAEA,GACA,gBAAA,EACA,UAAA,EACA,YAAA,EAKA,OAFA,KAEA,EAzCA,QACA,OAAA,iBACA,SAAA,oBAAA,GACA,QAAA,cAAA,GAEA,EAAA,SAAA,YAAA,aAAA,SAAA,SAAA,mGCNA,WACA,YASA,SAAA,KAEA,KAAA,UAKA,KAAA,KAAA,WACA,OACA,OAAA,KAAA,SASA,QAAA,GAAA,GACA,EAAA,UAAA,oBAAA,GAMA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,OAAA,gBAAA,EACA,OAAA,UAAA,EAAA,GACA,EAAA,EAAA,EACA,IAAA,IAAA,UAAA,EAAA,MAAA,GACA,EAAA,EAAA,EAAA,OAWA,GAAA,MAAA,EAAA,IAhDA,QACA,OAAA,oBACA,SAAA,kBAAA,GACA,OAAA,GAkBA,EAAA,SAAA,YAQA,EAAA,SAAA,YAAA,kBAAA,aClCA,WACA,YAOA,SAAA,GAAA,GAMA,QAAA,GAAA,GACA,MAAA,UAAA,GACA,EAAA,MAAA,EAAA,IAPA,GAAA,IACA,QAAA,EAEA,OAAA,GATA,QACA,OAAA,oBACA,QAAA,YAAA,2BCLA,QAAA,OAAA,YAAA,KAAA,iBAAA,SAAA,GAAA,EAAA,IAAA,6BAAA,usDACA,EAAA,IAAA,+BAAA,u/FACA,EAAA,IAAA,wBAAA,i7BACA,EAAA,IAAA,0BAAA,6kBACA,EAAA,IAAA,yBAAA,8sCACA,EAAA,IAAA,gCAAA","sourcesContent":["(function() {\n    'use strict';\n\n    angular.module('app', [\n        /*\n         * Order is not important. Angular makes a\n         * pass to register all of the modules listed\n         * and then when app.dashboard tries to use app.data,\n         * it's components are available.\n         */\n\n        /*\n         * Everybody has access to these.\n         * We could place these under every feature area,\n         * but this is easier to maintain.\n         */\n        'app.core',\n        'app.widgets',\n\n        /*\n         * Feature areas\n         */\n        'app.avengers',\n        'app.dashboard',\n        'app.layout'\n    ]);\n\n})();","(function() {\n    'use strict';\n\n    angular.module('app.avengers', []);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('app.core', [\n        /*\n         * Angular modules\n         */\n        'ngAnimate', 'ngRoute', 'ngSanitize',\n        /*\n         * Our reusable cross app code modules\n         */\n        'blocks.exception', 'blocks.logger', 'blocks.router',\n        /*\n         * 3rd Party modules\n         */\n        'ngplus'\n    ]);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('app.dashboard', []);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('app.layout', []);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('app.widgets', []);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('blocks.logger', []);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('blocks.router', [\n        'ngRoute',\n        'blocks.logger'\n    ]);\n})();\n","(function() {\n    'use strict';\n\n    angular.module('blocks.exception', ['blocks.logger']);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.avengers')\n        .controller('Avengers', Avengers);\n\n//    Avengers.$inject = ['dataservice', 'logger'];\n\n    /* @ngInject */\n    function Avengers(dataservice, logger) {\n        /*jshint validthis: true */\n        var vm = this;\n        vm.avengers = [];\n        vm.title = 'Avengers';\n\n        activate();\n\n        function activate() {\n//            Using a resolver on all routes or dataservice.ready in every controller\n//            var promises = [getAvengers()];\n//            return dataservice.ready(promises).then(function(){\n            return getAvengers().then(function() {\n                logger.info('Activated Avengers View');\n            });\n        }\n\n        function getAvengers() {\n            return dataservice.getAvengers().then(function(data) {\n                vm.avengers = data;\n                return vm.avengers;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.avengers')\n        .run(appRun);\n\n    // appRun.$inject = ['routehelper']\n\n    /* @ngInject */\n    function appRun(routehelper) {\n        routehelper.configureRoutes(getRoutes());\n    }\n\n    function getRoutes() {\n        return [\n            {\n                url: '/avengers',\n                config: {\n                    templateUrl: 'app/avengers/avengers.html',\n                    controller: 'Avengers',\n                    controllerAs: 'vm',\n                    title: 'avengers',\n                    settings: {\n                        nav: 2,\n                        content: '<i class=\"fa fa-lock\"></i> Avengers'\n                    }\n                }\n            }\n        ];\n    }\n})();\n","(function() {\n    'use strict';\n\n    var core = angular.module('app.core');\n\n    core.config(toastrConfig);\n\n    /* @ngInject */\n    function toastrConfig(toastr) {\n        toastr.options.timeOut = 4000;\n        toastr.options.positionClass = 'toast-bottom-right';\n    }\n\n    var config = {\n        appErrorPrefix: '[NG-Modular Error] ', //Configure the exceptionHandler decorator\n        appTitle: 'Angular Modular Demo',\n        version: '1.0.0'\n    };\n\n    core.value('config', config);\n\n    core.config(configure);\n\n    /* @ngInject */\n    function configure ($logProvider, $routeProvider, routehelperConfigProvider, exceptionConfigProvider) {\n        // turn debugging off/on (no info or warn)\n        if ($logProvider.debugEnabled) {\n            $logProvider.debugEnabled(true);\n        }\n\n        // Configure the common route provider\n        routehelperConfigProvider.config.$routeProvider = $routeProvider;\n        routehelperConfigProvider.config.docTitle = 'NG-Modular: ';\n        var resolveAlways = { /* @ngInject */\n            ready: function(dataservice) {\n                return dataservice.ready();\n            }\n            // ready: ['dataservice', function (dataservice) {\n            //    return dataservice.ready();\n            // }]\n        };\n        routehelperConfigProvider.config.resolveAlways = resolveAlways;\n\n        // Configure the common exception handler\n        exceptionConfigProvider.config.appErrorPrefix = config.appErrorPrefix;\n    }\n})();\n","/* global toastr:false, moment:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('app.core')\n        .constant('toastr', toastr)\n        .constant('moment', moment);\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('dataservice', dataservice);\n\n    /* @ngInject */\n    function dataservice($http, $location, $q, exception, logger) {\n        var isPrimed = false;\n        var primePromise;\n\n        var service = {\n            getAvengersCast: getAvengersCast,\n            getAvengerCount: getAvengerCount,\n            getAvengers: getAvengers,\n            ready: ready\n        };\n\n        return service;\n\n        function getAvengers() {\n            return $http.get('/api/maa')\n                .then(getAvengersComplete)\n                .catch(function(message) {\n                    exception.catcher('XHR Failed for getAvengers')(message);\n                    $location.url('/');\n                });\n\n            function getAvengersComplete(data, status, headers, config) {\n                return data.data[0].data.results;\n            }\n        }\n\n        function getAvengerCount() {\n            var count = 0;\n            return getAvengersCast()\n                .then(getAvengersCastComplete)\n                .catch(exception.catcher('XHR Failed for getAvengerCount'));\n\n            function getAvengersCastComplete (data) {\n                count = data.length;\n                return $q.when(count);\n            }\n        }\n\n        function getAvengersCast() {\n            var cast = [\n                {name: 'Robert Downey Jr.', character: 'Tony Stark / Iron Man'},\n                {name: 'Chris Hemsworth', character: 'Thor'},\n                {name: 'Chris Evans', character: 'Steve Rogers / Captain America'},\n                {name: 'Mark Ruffalo', character: 'Bruce Banner / The Hulk'},\n                {name: 'Scarlett Johansson', character: 'Natasha Romanoff / Black Widow'},\n                {name: 'Jeremy Renner', character: 'Clint Barton / Hawkeye'},\n                {name: 'Gwyneth Paltrow', character: 'Pepper Potts'},\n                {name: 'Samuel L. Jackson', character: 'Nick Fury'},\n                {name: 'Paul Bettany', character: 'Jarvis'},\n                {name: 'Tom Hiddleston', character: 'Loki'},\n                {name: 'Clark Gregg', character: 'Agent Phil Coulson'}\n            ];\n            return $q.when(cast);\n        }\n\n        function prime() {\n            // This function can only be called once.\n            if (primePromise) {\n                return primePromise;\n            }\n\n            primePromise = $q.when(true).then(success);\n            return primePromise;\n\n            function success() {\n                isPrimed = true;\n                logger.info('Primed data');\n            }\n        }\n\n        function ready(nextPromises) {\n            var readyPromise = primePromise || prime();\n\n            return readyPromise\n                .then(function() { return $q.all(nextPromises); })\n                .catch(exception.catcher('\"ready\" function failed'));\n        }\n\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.dashboard')\n        .run(appRun);\n\n    // appRun.$inject = ['routehelper'];\n\n    /* @ngInject */\n    function appRun(routehelper) {\n        routehelper.configureRoutes(getRoutes());\n    }\n\n    function getRoutes() {\n        return [\n            {\n                url: '/',\n                config: {\n                    templateUrl: 'app/dashboard/dashboard.html',\n                    controller: 'Dashboard',\n                    controllerAs: 'vm',\n                    title: 'dashboard',\n                    settings: {\n                        nav: 1,\n                        content: '<i class=\"fa fa-dashboard\"></i> Dashboard'\n                    }\n                }\n            }\n        ];\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.dashboard')\n        .controller('Dashboard', Dashboard);\n\n    Dashboard.$inject = ['$q', 'dataservice', 'logger'];\n\n    function Dashboard($q, dataservice, logger) {\n\n        /*jshint validthis: true */\n        var vm = this;\n\n        vm.news = {\n            title: 'Marvel Avengers',\n            description: 'Marvel Avengers 2 is now in production!'\n        };\n        vm.avengerCount = 0;\n        vm.avengers = [];\n        vm.title = 'Dashboard';\n\n        activate();\n\n        function activate() {\n            var promises = [getAvengerCount(), getAvengersCast()];\n//            Using a resolver on all routes or dataservice.ready in every controller\n//            return dataservice.ready(promises).then(function(){\n            return $q.all(promises).then(function() {\n                logger.info('Activated Dashboard View');\n            });\n        }\n\n        function getAvengerCount() {\n            return dataservice.getAvengerCount().then(function(data) {\n                vm.avengerCount = data;\n                return vm.avengerCount;\n            });\n        }\n\n        function getAvengersCast() {\n            return dataservice.getAvengersCast().then(function(data) {\n                vm.avengers = data;\n                return vm.avengers;\n            });\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.layout')\n        .controller('Shell', Shell);\n\n    Shell.$inject = ['$timeout', 'config', 'logger'];\n\n    function Shell($timeout, config, logger) {\n        /*jshint validthis: true */\n        var vm = this;\n\n        vm.title = config.appTitle;\n        vm.busyMessage = 'Please wait ...';\n        vm.isBusy = true;\n        vm.showSplash = true;\n\n        activate();\n\n        function activate() {\n            logger.success(config.appTitle + ' loaded!', null);\n//            Using a resolver on all routes or dataservice.ready in every controller\n//            dataservice.ready().then(function(){\n//                hideSplash();\n//            });\n            hideSplash();\n        }\n\n        function hideSplash() {\n            //Force a 1 second delay so we can see the splash.\n            $timeout(function() {\n                vm.showSplash = false;\n            }, 1000);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.layout')\n        .controller('Sidebar', Sidebar);\n\n    Sidebar.$inject = ['$route', 'routehelper'];\n\n    function Sidebar($route, routehelper) {\n        /*jshint validthis: true */\n        var vm = this;\n        var routes = routehelper.getRoutes();\n\n        vm.isCurrent = isCurrent;\n\n        activate();\n\n        function activate() { getNavRoutes(); }\n\n        function getNavRoutes() {\n            vm.navRoutes = routes.filter(function(r) {\n                return r.settings && r.settings.nav;\n            }).sort(function(r1, r2) {\n                return r1.settings.nav - r2.settings.nav;\n            });\n        }\n\n        function isCurrent(route) {\n            if (!route.title || !$route.current || !$route.current.title) {\n                return '';\n            }\n            var menuName = route.title;\n            return $route.current.title.substr(0, menuName.length) === menuName ? 'current' : '';\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.widgets')\n        .directive('ccSidebar', ccSidebar);\n\n    /* @ngInject */\n    function ccSidebar () {\n        // Opens and closes the sidebar menu.\n        // Usage:\n        //  <div data-cc-sidebar>\n        // Creates:\n        //  <div data-cc-sidebar class=\"sidebar\">\n        var directive = {\n            link: link,\n            restrict: 'A'\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            var $sidebarInner = element.find('.sidebar-inner');\n            var $dropdownElement = element.find('.sidebar-dropdown a');\n            element.addClass('sidebar');\n            $dropdownElement.click(dropdown);\n\n            function dropdown(e) {\n                var dropClass = 'dropy';\n                e.preventDefault();\n                if (!$dropdownElement.hasClass(dropClass)) {\n                    hideAllSidebars();\n                    $sidebarInner.slideDown(350);\n                    $dropdownElement.addClass(dropClass);\n                } else if ($dropdownElement.hasClass(dropClass)) {\n                    $dropdownElement.removeClass(dropClass);\n                    $sidebarInner.slideUp(350);\n                }\n\n                function hideAllSidebars() {\n                    $sidebarInner.slideUp(350);\n                    $('.sidebar-dropdown a').removeClass(dropClass);\n                }\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.widgets')\n        .directive('ccSpinner', ccSpinner);\n\n    // ccSpinner.$inject = ['$window'];\n\n    /* @ngInject */\n    function ccSpinner ($window) {\n        // Description:\n        //  Creates a new Spinner and sets its options\n        // Usage:\n        //  <div data-cc-spinner=\"vm.spinnerOptions\"></div>\n        var directive = {\n            link: link,\n            restrict: 'A'\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            scope.spinner = null;\n            scope.$watch(attrs.ccSpinner, function(options) {\n                if (scope.spinner) {\n                    scope.spinner.stop();\n                }\n                scope.spinner = new $window.Spinner(options);\n                scope.spinner.spin(element[0]);\n            }, true);\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.widgets')\n        .directive('ccWidgetClose', ccWidgetClose);\n\n    /* @ngInject */\n    function ccWidgetClose () {\n        // Usage:\n        // <a data-cc-widget-close></a>\n        // Creates:\n        // <a data-cc-widget-close=\"\" href=\"#\" class=\"wclose\">\n        //     <i class=\"fa fa-remove\"></i>\n        // </a>\n        var directive = {\n            link: link,\n            template: '<i class=\"fa fa-remove\"></i>',\n            restrict: 'A'\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            attrs.$set('href', '#');\n            attrs.$set('wclose');\n            element.click(closeEl);\n\n            function closeEl(e) {\n                e.preventDefault();\n                element.parent().parent().parent().hide(100);\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.widgets')\n        .directive('ccWidgetHeader', ccWidgetHeader);\n\n    /* @ngInject */\n    function ccWidgetHeader () {\n        //Usage:\n        //<div data-cc-widget-header title=\"vm.map.title\"></div>\n        // Creates:\n        // <div data-cc-widget-header=\"\"\n        //      title=\"Avengers Movie\"\n        //      allow-collapse=\"true\" </div>\n        var directive = {\n//            link: link,\n            scope: {\n                'title': '@',\n                'subtitle': '@',\n                'rightText': '@',\n                'allowCollapse': '@'\n            },\n            templateUrl: 'app/widgets/widgetheader.html',\n            restrict: 'A'\n        };\n        return directive;\n\n//        function link(scope, element, attrs) {\n//            attrs.$set('class', 'widget-head');\n//        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app.widgets')\n        .directive('ccWidgetMinimize', ccWidgetMinimize);\n\n    /* @ngInject */\n    function ccWidgetMinimize () {\n        // Usage:\n        // <a data-cc-widget-minimize></a>\n        // Creates:\n        // <a data-cc-widget-minimize=\"\" href=\"#\"><i class=\"fa fa-chevron-up\"></i></a>\n        var directive = {\n            link: link,\n            template: '<i class=\"fa fa-chevron-up\"></i>',\n            restrict: 'A'\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\n            //$('body').on('click', '.widget .wminimize', minimize);\n            attrs.$set('href', '#');\n            attrs.$set('wminimize');\n            element.click(minimize);\n\n            function minimize(e) {\n                e.preventDefault();\n                var $wcontent = element.parent().parent().next('.widget-content');\n                var iElement = element.children('i');\n                if ($wcontent.is(':visible')) {\n                    iElement.removeClass('fa fa-chevron-up');\n                    iElement.addClass('fa fa-chevron-down');\n                } else {\n                    iElement.removeClass('fa fa-chevron-down');\n                    iElement.addClass('fa fa-chevron-up');\n                }\n                $wcontent.toggle(500);\n            }\n        }\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('blocks.logger')\n        .factory('logger', logger);\n\n    logger.$inject = ['$log', 'toastr'];\n\n    function logger($log, toastr) {\n        var service = {\n            showToasts: true,\n\n            error   : error,\n            info    : info,\n            success : success,\n            warning : warning,\n\n            // straight to console; bypass toastr\n            log     : $log.log\n        };\n\n        return service;\n        /////////////////////\n\n        function error(message, data, title) {\n            toastr.error(message, title);\n            $log.error('Error: ' + message, data);\n        }\n\n        function info(message, data, title) {\n            toastr.info(message, title);\n            $log.info('Info: ' + message, data);\n        }\n\n        function success(message, data, title) {\n            toastr.success(message, title);\n            $log.info('Success: ' + message, data);\n        }\n\n        function warning(message, data, title) {\n            toastr.warning(message, title);\n            $log.warn('Warning: ' + message, data);\n        }\n    }\n}());\n","(function() {\n    'use strict';\n\n    angular\n        .module('blocks.router')\n        .provider('routehelperConfig', routehelperConfig)\n        .factory('routehelper', routehelper);\n\n    routehelper.$inject = ['$location', '$rootScope', '$route', 'logger', 'routehelperConfig'];\n\n    // Must configure via the routehelperConfigProvider\n    function routehelperConfig() {\n        /* jshint validthis:true */\n        this.config = {\n            // These are the properties we need to set\n            // $routeProvider: undefined\n            // docTitle: ''\n            // resolveAlways: {ready: function(){ } }\n        };\n\n        this.$get = function() {\n            return {\n                config: this.config\n            };\n        };\n    }\n\n    function routehelper($location, $rootScope, $route, logger, routehelperConfig) {\n        var handlingRouteChangeError = false;\n        var routeCounts = {\n            errors: 0,\n            changes: 0\n        };\n        var routes = [];\n        var $routeProvider = routehelperConfig.config.$routeProvider;\n\n        var service = {\n            configureRoutes: configureRoutes,\n            getRoutes: getRoutes,\n            routeCounts: routeCounts\n        };\n\n        init();\n\n        return service;\n        ///////////////\n\n        function configureRoutes(routes) {\n            routes.forEach(function(route) {\n                route.config.resolve =\n                    angular.extend(route.config.resolve || {}, routehelperConfig.config.resolveAlways);\n                $routeProvider.when(route.url, route.config);\n            });\n            $routeProvider.otherwise({redirectTo: '/'});\n        }\n\n        function handleRoutingErrors() {\n            // Route cancellation:\n            // On routing error, go to the dashboard.\n            // Provide an exit clause if it tries to do it twice.\n            $rootScope.$on('$routeChangeError',\n                function(event, current, previous, rejection) {\n                    if (handlingRouteChangeError) {\n                        return;\n                    }\n                    routeCounts.errors++;\n                    handlingRouteChangeError = true;\n                    var destination = (current && (current.title || current.name || current.loadedTemplateUrl)) ||\n                        'unknown target';\n                    var msg = 'Error routing to ' + destination + '. ' + (rejection.msg || '');\n                    logger.warning(msg, [current]);\n                    $location.path('/');\n                }\n            );\n        }\n\n        function init() {\n            handleRoutingErrors();\n            updateDocTitle();\n        }\n\n        function getRoutes() {\n            for (var prop in $route.routes) {\n                if ($route.routes.hasOwnProperty(prop)) {\n                    var route = $route.routes[prop];\n                    var isRoute = !!route.title;\n                    if (isRoute) {\n                        routes.push(route);\n                    }\n                }\n            }\n            return routes;\n        }\n\n        function updateDocTitle() {\n            $rootScope.$on('$routeChangeSuccess',\n                function(event, current, previous) {\n                    routeCounts.changes++;\n                    handlingRouteChangeError = false;\n                    var title = routehelperConfig.config.docTitle + ' ' + (current.title || '');\n                    $rootScope.title = title; // data bind to <title>\n                }\n            );\n        }\n    }\n})();\n","// Include in index.html so that app level exceptions are handled.\n// Exclude from testRunner.html which should run exactly what it wants to run\n(function() {\n    'use strict';\n\n    angular\n        .module('blocks.exception')\n        .provider('exceptionConfig', exceptionConfigProvider)\n        .config(exceptionConfig);\n\n    // Must configure the service and set its\n    // events via the exceptionConfigProvider\n    function exceptionConfigProvider() {\n        /* jshint validthis:true */\n        this.config = {\n            // These are the properties we need to set\n            //appErrorPrefix: ''\n        };\n\n        this.$get = function() {\n            return {\n                config: this.config\n            };\n        };\n    }\n\n    exceptionConfig.$inject = ['$provide'];\n\n    // Configure by setting an optional string value for appErrorPrefix.\n    // Accessible via config.appErrorPrefix (via config value).\n    function exceptionConfig($provide) {\n        $provide.decorator('$exceptionHandler', extendExceptionHandler);\n    }\n\n    extendExceptionHandler.$inject = ['$delegate', 'exceptionConfig', 'logger'];\n\n    // Extend the $exceptionHandler service to also display a toast.\n    function extendExceptionHandler($delegate, exceptionConfig, logger) {\n        var appErrorPrefix = exceptionConfig.config.appErrorPrefix || '';\n        return function(exception, cause) {\n            $delegate(exception, cause);\n            var errorData = {exception: exception, cause: cause};\n            var msg = appErrorPrefix + exception.message;\n            /**\n             * Could add the error to a service's collection,\n             * add errors to $rootScope, log errors to remote web server,\n             * or log locally. Or throw hard. It is entirely up to you.\n             * throw exception;\n             *\n             * @example\n             *     throw { message: 'error message we added' };\n             *\n             */\n            logger.error(msg, errorData);\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('blocks.exception')\n        .factory('exception', exception);\n\n    /* @ngInject */\n    function exception(logger) {\n        var service = {\n            catcher: catcher\n        };\n        return service;\n\n        function catcher(message) {\n            return function(reason) {\n                logger.error(message, reason);\n            };\n        }\n    }\n})();","angular.module(\"app.core\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/avengers/avengers.html\",\"<section class=\\\"mainbar\\\">\\n    <section class=\\\"matter\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"widget wblue\\\">\\n                    <div data-cc-widget-header title=\\\"{{vm.title}}\\\"></div>\\n                    <div class=\\\"widget-content user\\\">\\n                        <!--<pre>{{vm.avengers.data | json}}</pre>-->\\n                        <input data-ng-model=\\\"vm.filter.name\\\" placeholder=\\\"Find Avengers by name\\\" type=\\\"search\\\"/>\\n                        <table class=\\\"table table-condensed table-striped\\\">\\n                            <thead>\\n                            <tr>\\n                                <th></th>\\n                                <th>Character</th>\\n                                <th>Description</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr data-ng-repeat=\\\"c in vm.avengers | filter:vm.filter track by c.id\\\">\\n                                <td><img\\n                                        ng-src=\\\"{{c.thumbnail.path}}.{{c.thumbnail.extension}}\\\"\\n                                        class=\\\"avenger-thumb img-rounded\\\"/></td>\\n                                <td><span class=\\\"avenger-name\\\">{{c.name}}</span></td>\\n                                <td>{{c.description | limitTo: 2000 }} ...</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div class=\\\"widget-foot\\\">\\n                        <div class=\\\"clearfix\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</section>\\n\");\n$templateCache.put(\"app/dashboard/dashboard.html\",\"<section id=\\\"dashboard-view\\\" class=\\\"mainbar\\\">\\n    <section class=\\\"matter\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <ul class=\\\"today-datas\\\">\\n                        <li class=\\\"blightblue\\\">\\n                            <div class=\\\"pull-left\\\"><i class=\\\"fa fa-plane\\\"></i></div>\\n                            <div class=\\\"datas-text pull-right\\\">\\n                                <span class=\\\"bold\\\">Stark Tower</span> New York, New York\\n                            </div>\\n                            <div class=\\\"clearfix\\\"></div>\\n                        </li>\\n\\n                        <li class=\\\"bblue\\\">\\n                            <div class=\\\"pull-left avenger-logo\\\"></div>\\n                            <div class=\\\"datas-text pull-right\\\">\\n                                <span class=\\\"bold\\\">{{vm.avengerCount}}</span> Cast\\n                            </div>\\n                            <div class=\\\"clearfix\\\"></div>\\n                        </li>\\n\\n                    </ul>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"widget wblue\\\">\\n                        <div data-cc-widget-header title=\\\"Avengers Movie Cast\\\"\\n                             allow-collapse=\\\"true\\\"></div>\\n                        <div class=\\\"widget-content text-center text-info\\\">\\n                            <table class=\\\"table table-condensed table-striped\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Name</th>\\n                                        <th>Character</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr data-ng-repeat=\\\"a in vm.avengers\\\">\\n                                        <td>{{a.name}}</td>\\n                                        <td>{{a.character}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                        <div class=\\\"widget-foot\\\">\\n                            <div class=\\\"clearfix\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"widget wlightblue\\\">\\n                        <div data-cc-widget-header title=\\\"{{vm.news.title}}\\\"\\n                             allow-collapse=\\\"true\\\"></div>\\n                        <div class=\\\"widget-content text-center text-info\\\">\\n                            <small>{{vm.news.description}}</small>\\n                        </div>\\n                        <div class=\\\"widget-foot\\\">\\n                            <div class=\\\"clearfix\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</section>\");\n$templateCache.put(\"app/layout/shell.html\",\"<div data-ng-controller=\\\"Shell as vm\\\">\\n    <div id=\\\"splash-page\\\" data-ng-show=\\\"vm.showSplash\\\" class=\\\"dissolve-animation\\\">\\n        <div class=\\\"page-splash\\\">\\n            <div class=\\\"page-splash-message\\\">\\n                Modular Demo\\n            </div>\\n        </div>\\n    </div>\\n\\n    <header class=\\\"clearfix\\\">\\n        <div data-ng-include=\\\"\\'app/layout/topnav.html\\'\\\"></div>\\n    </header>\\n    <section id=\\\"content\\\" class=\\\"content\\\">\\n        <div data-ng-include=\\\"\\'app/layout/sidebar.html\\'\\\"></div>\\n\\n        <div data-ng-view class=\\\"shuffle-animation\\\"></div>\\n\\n        <div ngplus-overlay\\n             ngplus-overlay-delay-in=\\\"50\\\"\\n             ngplus-overlay-delay-out=\\\"700\\\"\\n             ngplus-overlay-animation=\\\"dissolve-animation\\\">\\n            <img src=\\\"../../content/images/busy.gif\\\"/>\\n\\n            <div class=\\\"page-spinner-message overlay-message\\\">{{vm.busyMessage}}</div>\\n        </div>\\n    </section>\\n</div>\\n\\n\\n\");\n$templateCache.put(\"app/layout/sidebar.html\",\"<div data-cc-sidebar data-ng-controller=\\\"Sidebar as vm\\\">\\n    <div class=\\\"sidebar-filler\\\"></div>\\n    <div class=\\\"sidebar-dropdown\\\"><a href=\\\"#\\\">Menu</a></div>\\n    <div class=\\\"sidebar-inner\\\">\\n        <div class=\\\"sidebar-widget\\\">\\n        </div>\\n        <ul class=\\\"navi\\\">\\n            <li class=\\\"nlightblue fade-selection-animation\\\" data-ng-class=\\\"vm.isCurrent(r)\\\"\\n                data-ng-repeat=\\\"r in vm.navRoutes\\\">\\n                <a href=\\\"#{{r.originalPath}}\\\"\\n                   data-ng-bind-html=\\\"r.settings.content\\\"></a>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"app/layout/topnav.html\",\"<nav class=\\\"navbar navbar-fixed-top navbar-inverse\\\">\\n    <div class=\\\"navbar-header\\\">\\n        <a href=\\\"/\\\" class=\\\"navbar-brand\\\"><span class=\\\"brand-title\\\">{{vm.title}}</span></a>\\n        <a class=\\\"btn navbar-btn navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n        </a>\\n    </div>\\n    <div class=\\\"navbar-collapse collapse\\\">\\n        <div class=\\\"pull-right navbar-logo\\\">\\n            <ul class=\\\"nav navbar-nav pull-right\\\">\\n                <li>\\n                    <a href=\\\"http://www.johnpapa.net/hottowel-angular\\\" target=\\\"_blank\\\">\\n                        Created by John Papa\\n                    </a>\\n                </li>\\n                <li class=\\\"dropdown dropdown-big\\\">\\n                    <a href=\\\"http://www.angularjs.org\\\" target=\\\"_blank\\\">\\n                        <img src=\\\"content/images/AngularJS-small.png\\\" />\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"http://developer.marvel.com/\\\" target=\\\"_blank\\\">Marvel API</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\");\n$templateCache.put(\"app/widgets/widgetheader.html\",\"<div class=\\\"widget-head\\\">\\n    <div class=\\\"page-title pull-left\\\">{{title}}</div>\\n    <small class=\\\"page-title-subtle\\\" data-ng-show=\\\"subtitle\\\">({{subtitle}})</small>\\n    <div class=\\\"widget-icons pull-right\\\" data-ng-if=\\\"allowCollapse\\\">\\n        <a data-cc-widget-minimize></a>\\n    </div>\\n    <small class=\\\"pull-right page-title-subtle\\\" data-ng-show=\\\"rightText\\\">{{rightText}}</small>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\");}]);"],"sourceRoot":"/source/"}